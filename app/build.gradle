apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'io.gitlab.arturbosch.detekt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.wolkowiczmateusz.android.cleanmvpretrofitrxdaggerboilerplate"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.wolkowiczmateusz.android.cleanmvpretrofitrxdaggerboilerplate.TestApplicationRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
    lintOptions {
        lintConfig file('lint.xml')
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
            unitTests.returnDefaultValues = true
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
}
configurations {
    ktlint
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Android
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintlayoutVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-media-compat:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"

    // DI
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"

    // Logger
    implementation "com.jakewharton.timber:timber:$rootProject.ext.timberVersion"

    // Db
    implementation "com.j256.ormlite:ormlite-android:$rootProject.ext.ormliteVersion"

    // Multithreading
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.ext.rxJava2Version"
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.ext.rxJava2AndroidVersion"

    // Graphic/animation/etc.
    implementation "com.github.ybq:Android-SpinKit:$rootProject.ext.spinKitVersion"
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$rootProject.ext.junitVersion"
//    testImplementation "org.mockito:mockito-all:$rootProject.ext.mockitoVersion"
    testImplementation "org.assertj:assertj-core:$rootProject.ext.assertJVersion"

//    testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
//    testImplementation "org.powermock:powermock-module-junit4:$rootProject.ext.powerMockito"
//    testImplementation "org.powermock:powermock-api-mockito:$rootProject.ext.powerMockito"

    // Android Testing Support Library's runner and rules
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.runnerVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.rulesVersion"

    // Espresso UI Testing dependencies.
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-intents:$rootProject.ext.espressoVersion"

    // Dagger in androidTest
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"

    // Mockito in androidTest
    androidTestImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker:$rootProject.ext.dexmakerVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$rootProject.ext.dexmakerVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.ext.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.ext.coroutinesVersion"

    //Kotlin static code analysis
    ktlint "com.github.shyiko:ktlint:$rootProject.ktlintVersion"

    // Kotlin tests (standard set : JUnit5 , MockK, AssertJ)
    // Kotlin Unit Tests on the JUnit5 Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:$rootProject.junit5Version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$rootProject.junit5Version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$rootProject.junit5Version"

    // Kotlin "Parameterized Tests" with JUnit5
    testImplementation "org.junit.jupiter:junit-jupiter-params:$rootProject.junit5Version"

    // Kotlin other tests libraries
    testImplementation "io.mockk:mockk:$rootProject.ext.mockkVersion"
//    androidTestImplementation "org.mockito:mockito-android:$rootProject.ext.mockitoAndroidVersion"
    // testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$rootProject.kotlin_version"
    // testImplementation "com.nhaarman:mockito-kotlin:$rootProject.ext.mockitoKotlinVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$rootProject.ext.mockitoKotlin2Version"
    testImplementation "org.mockito:mockito-inline:$rootProject.ext.mockitoInlineKotlinVersion"
    // testImplementation "org.robolectric:robolectric:$rootProject.ext.robolectricVersion"

    // Crash reporting
    implementation "com.crashlytics.sdk.android:crashlytics:$rootProject.ext.crashlyticsVersion"

    // Firebase
    implementation "com.google.firebase:firebase-core:$rootProject.ext.firebaseCoreVersion"
    implementation "com.google.firebase:firebase-perf:$rootProject.ext.firebasePerfVersion"

    // Memory Leaks
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.ext.leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.ext.leakCanaryVersion"
    // Optional, if you use support library fragments:
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.ext.leakCanaryVersion"

    // Other libraries
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okhttpVersion"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rootProject.ext.rxJava2Retrofit2Adapter"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.squareUpRetrofit2Adapter"

}
repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}
apply plugin: 'com.google.gms.google-services'

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint
task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}